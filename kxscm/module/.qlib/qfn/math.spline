// @fileoverview Perform cubic spline interpolation of given data points, returning either table of 
//  data points obtained by the interpolation. If the x values are of categorical type, the index of 
//  the table rows are used.
// 
// @param tbl {table} A table
// @param x {symbol} A column from the table
// @param y {symbol} A column from the table
//
// @returns {table} A table of data points after the cubic spline interpolation.

{[tbl;x;y]
  if[98h<>type tbl;'"The first argument must be a table"];
  if[-11h<>type x;'"The second argument must be a symbol"];
  if[-11h<>type y;'"The third argument must be a symbol"];
  if[not all (x;y) in cols tbl;'"The second and third argument must be a column of the table provided"];
  
  t:?[tbl;();0b;`x`y!(x;y)];
  isCategorical:type[t`x] in 10 11 -10, -11h;
  if[isCategorical;update x:i from t];
  
  f:{(2#x+2)#1 1,(x#0),1};
  t:update x:i,l:f -2+count t from t;
  t:update loc:(where') l from t;
  t:update xs:x@ loc,ys:y@ loc from t;
  
  m0:{d:x[1]-x[0];(2%d;1%d)};
  mn:{d:x[1]-x[0];(1%d;2%d)};
  mi:{d1:x[1]-x[0];d2:x[2]-x[1];(1%d1;2*(1%d1)+1%d2;1%d2)};
  z0:{xs:x 0;ys: x 1;xd:xs[1]-xs[0];yd:ys[1]-ys[0];3*yd%xd*xd};
  zn:{xs:x 0;ys: x 1;xd:xs[1]-xs[0];yd:ys[1]-ys[0];3*yd%xd*xd};
  zi:{xs:x 0;ys: x 1;xd1:xs[1]-xs[0];xd2:xs[2]-xs[1];yd1:ys[1]-ys[0];yd2:ys[2]-ys[1];3*(yd1%xd1*xd1)+yd2%xd2*xd2};
  qx:{[a;b;x0;x1;y0;y1;x] t:(x-x0)%x1-x0;p1:(1-t)*y0;p2:t*y1;p3:t*1-t;p4:a*1-t;p5:t*b;p1+p2+p3*p4+p5};
  
  t:update m:m0 each xs,z:z0 each flip (xs;ys) from t where i=first i;
  t:update m:mn each xs,z:zn each flip (xs;ys) from t where i=last i;
  t:update m:mi each xs,z:zi each flip (xs;ys) from t where 0=count each m;
  t:update A:{@[`float$x 0;x 1;:;x 2]} each flip (l;loc;m) from t;
  k:first enlist[t[`z]] lsq flip t[`A];
  t:update k:k from t;
  t:update a:(prev[k]*x-prev x)-y-prev y from t;
  t:update b:(y-prev y)-k*x-prev x from t;
  t:update q:(qx .) each flip (a;b;prev x;x;prev y;y) from t;
  t:ungroup select q,nx:({[x0;x1] x0+(x1-x0)*0.01*til 100}.) each flip (prev x;x) from t;
  t:select x:nx,y:q@' nx from t where not null nx;
  t
  }
